{"version":3,"file":"static/js/304.fd9bb077.chunk.js","mappings":"4LAGaA,EAAOC,EAAAA,GAAAA,GAAH,sHAQJC,EAAOD,EAAAA,GAAAA,GAAH,kEAKJE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,oKAWTI,EAAWJ,EAAAA,GAAAA,KAAH,2C,SCvBRK,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAACT,EAAD,UACGO,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACT,EAAD,WACE,UAACC,EAAD,CAAWS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,UACGG,EAAMK,OACP,UAACX,EAAD,gBAAaY,OAAOC,SAASP,EAAMQ,cAAnC,WAHOR,EAAME,GADF,OAWxB,C,iKClBYO,E,QAAUnB,GAAAA,IAAH,sE,SCoCpB,EAhCa,WACX,OAA4BoB,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGuBE,EAAAA,EAAAA,MAHvB,OAGUC,EAHV,OAIIL,EAAUK,GAJd,gDAMIC,QAAQC,IAAIC,OANhB,yBAQIN,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdO,EACD,GAAE,KAED,6BACE,2CACCR,GACC,SAACH,EAAD,WACE,SAACY,EAAA,EAAD,OAGF,SAAC1B,EAAA,EAAD,CAAWC,OAAQA,MAI1B,C,kMCnCD0B,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHR,EAAS,mCAAG,oGACJO,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACjBC,EADiB,yBAEhBA,EAAKR,KAAKS,SAFM,2CAAH,qDAKTC,EAAa,mCAAG,WAAMC,GAAN,yFACJL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAsCJ,IADlC,uBACnBP,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbY,EAAU,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,+BACOC,EADP,kBACwBM,IAFnB,cAClBL,EADkB,yBAIjBA,EAAKR,KAAKS,SAJO,2CAAH,sDAOVK,EAAe,mCAAG,WAAMH,GAAN,yFACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeJ,IAFT,uBACrBP,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfe,EAAe,mCAAG,WAAMJ,GAAN,yFACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeJ,IAFT,uBACrBP,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/ApiTMDB.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  gap: 5px;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: inline-block;\n  width: 100%;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: inline-block;\n  padding: 3px 16px;\n  color: black;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: #00008b;\n  }\n`;\n\nexport const FilmYear = styled.span`\n  color: #808080;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, MovieLink, FilmYear } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n              <FilmYear> ({Number.parseInt(movie.release_date)})</FilmYear>\n            </MovieLink>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { GetMovies } from '../../services/ApiTMDB';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Spinner } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n        const data = await GetMovies();\n        setMovies(data);\n      } catch {\n        console.log(Error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovies();\n  }, []);\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {isLoading ? (\n        <Spinner>\n          <Loader />\n        </Spinner>\n      ) : (\n        <MovieList movies={movies} />\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '95775b42e188d6443a0bfb132dcec5e1';\n\nexport const GetMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return resp.data.results;\n};\n\nexport const GetMoviesById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const FindMovies = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data.results;\n};\n\nexport const GetMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const GetMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["List","styled","Item","MovieLink","NavLink","FilmYear","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","Number","parseInt","release_date","Spinner","useState","setMovies","isLoading","setIsLoading","useEffect","GetMovies","data","console","log","Error","fetchMovies","Loader","axios","API_KEY","resp","results","GetMoviesById","movieId","FindMovies","query","GetMovieCredits","GetMovieReviews"],"sourceRoot":""}