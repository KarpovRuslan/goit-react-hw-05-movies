{"version":3,"file":"static/js/474.2cd3fe5b.chunk.js","mappings":"sPAEaA,EAAcC,EAAAA,GAAAA,IAAH,oIAQXC,EAAOD,EAAAA,GAAAA,IAAH,mE,mBCNXE,GACJ,UAACH,EAAD,YACE,SAAC,MAAD,CAA6BI,MAAM,SAAU,KAC7C,SAACF,EAAD,wDACA,SAAC,MAAD,CAA6BE,MAAM,YAqBvC,EAjBoB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,8BACsB,IAAnBA,EAAQC,OACLH,EACAE,EAAQE,KAAI,SAAAC,GACV,OACE,4BACE,qCAAaA,EAAGC,WAChB,uBAAID,EAAGE,YAFCF,EAAGG,GAKhB,KAGV,ECDD,EArBgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAgBN,GAFvC,OAEUO,EAFV,OAGIH,EAAcG,GAHlB,gDAKIC,QAAQC,IAAIC,OALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACX,KAGF,0BAAOG,IAAc,SAAC,EAAD,CAAaV,QAASU,EAAWV,WAEzD,C,kMCvBDmB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAS,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACjBE,EADiB,yBAEhBA,EAAKR,KAAKd,SAFM,2CAAH,qDAKTuB,EAAa,mCAAG,WAAMhB,GAAN,yFACJY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,oBAAsCa,IADlC,uBACnBN,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbU,EAAU,mCAAG,WAAMC,GAAN,uFACLN,EAAAA,EAAAA,IAAA,+BACOC,EADP,kBACwBK,IAFnB,cAClBH,EADkB,yBAIjBA,EAAKR,KAAKd,SAJO,2CAAH,sDAOV0B,EAAe,mCAAG,WAAMnB,GAAN,yFACNY,EAAAA,EAAAA,IAAA,gBACZZ,EADY,4BACea,IAFT,uBACrBN,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfD,EAAe,mCAAG,WAAMN,GAAN,yFACNY,EAAAA,EAAAA,IAAA,gBACZZ,EADY,4BACea,IAFT,uBACrBN,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/ReviewsList/ReviewList.styled.js","components/ReviewsList/ReviewList.jsx","components/Reviews/Reviews.jsx","services/ApiTMDB.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ZeroReviews = styled.div`\n  display: flex;\n  justify-content: start;\n  font-size: 20px;\n  margin-top: 20px;\n  margin-left: 20px;\n`;\n\nexport const Text = styled.div`\n  margin-left: 5px;\n  margin-right: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { ZeroReviews, Text } from './ReviewList.styled';\nimport { BsFillExclamationSquareFill } from 'react-icons/bs';\n\nconst noReviews = (\n  <ZeroReviews>\n    <BsFillExclamationSquareFill color=\"grey\" />{' '}\n    <Text>We don't have any reviews for this movie</Text>\n    <BsFillExclamationSquareFill color=\"grey\" />\n  </ZeroReviews>\n);\n\nconst ReviewsList = ({ results }) => {\n  return (\n    <>\n      {results.length === 0\n        ? noReviews\n        : results.map(el => {\n            return (\n              <div key={el.id}>\n                <h3>Author: {el.author}</h3>\n                <p>{el.content}</p>\n              </div>\n            );\n          })}\n    </>\n  );\n};\n\nexport default ReviewsList;\n\nReviewsList.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { GetMovieReviews } from '../../services/ApiTMDB';\nimport ReviewsList from 'components/ReviewsList/ReviewList';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [moviesData, setMoviesData] = useState(null);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const data = await GetMovieReviews(movieId);\n        setMoviesData(data);\n      } catch {\n        console.log(Error);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <main>{moviesData && <ReviewsList results={moviesData.results} />}</main>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '95775b42e188d6443a0bfb132dcec5e1';\n\nexport const GetMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return resp.data.results;\n};\n\nexport const GetMoviesById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const FindMovies = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data.results;\n};\n\nexport const GetMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const GetMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["ZeroReviews","styled","Text","noReviews","color","results","length","map","el","author","content","id","movieId","useParams","useState","moviesData","setMoviesData","useEffect","GetMovieReviews","data","console","log","Error","fetchReviews","axios","API_KEY","GetMovies","resp","GetMoviesById","FindMovies","query","GetMovieCredits"],"sourceRoot":""}