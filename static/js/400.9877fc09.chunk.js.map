{"version":3,"file":"static/js/400.9877fc09.chunk.js","mappings":"sPAEaA,EAAmBC,EAAAA,GAAAA,IAAH,4GAOhBC,EAAWD,EAAAA,GAAAA,IAAH,8C,mBCqBrB,EAzBiB,SAAC,GAAc,IAAZE,EAAW,EAAXA,KAClB,OACE,8BACGA,EAAKC,KAAI,SAAAC,GACR,OACE,UAACL,EAAD,YACE,gBACEM,IACED,EAAGE,aAAH,0CACuCF,EAAGE,cACtCC,EAENC,IAAKJ,EAAGK,QAEV,UAACR,EAAD,YACE,wBAAKG,EAAGK,QACR,uCAAeL,EAAGM,iBAEpB,SAAC,KAAD,MAbqBN,EAAGO,QAgB7B,KAGN,E,UCKD,EA5Ba,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAa,GADf,mBAGuBE,EAAAA,EAAAA,IAAgBR,GAHvC,OAGUS,EAHV,OAIIL,EAAcK,GAJlB,gDAMIC,QAAQC,IAAIC,OANhB,yBAQIN,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdO,EACD,GAAE,CAACb,KAGF,4BACGK,IAAa,SAACS,EAAA,EAAD,IACbX,IAAc,SAAC,EAAD,CAAUb,KAAMa,EAAWb,SAG/C,C,kMC/BDyB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAS,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACjBE,EADiB,yBAEhBA,EAAKT,KAAKU,SAFM,2CAAH,qDAKTC,EAAa,mCAAG,WAAMpB,GAAN,yFACJe,EAAAA,EAAAA,IAAA,gBAAmBf,EAAnB,oBAAsCgB,IADlC,uBACnBP,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbY,EAAU,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,+BACOC,EADP,kBACwBM,IAFnB,cAClBJ,EADkB,yBAIjBA,EAAKT,KAAKU,SAJO,2CAAH,sDAOVX,EAAe,mCAAG,WAAMR,GAAN,yFACNe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,IAFT,uBACrBP,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfc,EAAe,mCAAG,WAAMvB,GAAN,yFACNe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,IAFT,uBACrBP,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/CastList/CastList.styled.js","components/CastList/CastList.jsx","components/Cast/Cast.jsx","services/ApiTMDB.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastDetailsBlock = styled.div`\n  display: flex;\n  justify-content: start;\n  height: 150px;\n  margin-top: 10px;\n`;\n\nexport const CastInfo = styled.div`\n  margin-left: 15px;\n`;\n","import { Outlet } from 'react-router-dom';\nimport { CastDetailsBlock, CastInfo } from './CastList.styled';\nimport PropTypes from 'prop-types';\nimport noImg from '../../image/noImage.png';\n\nconst CastList = ({ cast }) => {\n  return (\n    <>\n      {cast.map(el => {\n        return (\n          <CastDetailsBlock key={el.cast_id}>\n            <img\n              src={\n                el.profile_path\n                  ? `https://image.tmdb.org/t/p/w200/${el.profile_path}`\n                  : noImg\n              }\n              alt={el.name}\n            />\n            <CastInfo>\n              <h3>{el.name}</h3>\n              <p>Character: {el.character}</p>\n            </CastInfo>\n            <Outlet />\n          </CastDetailsBlock>\n        );\n      })}\n    </>\n  );\n};\nexport default CastList;\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { GetMovieCredits } from '../../services/ApiTMDB';\nimport CastList from 'components/CastList/CastList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [moviesData, setMoviesData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      setIsLoading(true);\n      try {\n        const data = await GetMovieCredits(movieId);\n        setMoviesData(data);\n      } catch {\n        console.log(Error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {moviesData && <CastList cast={moviesData.cast} />}\n    </main>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '95775b42e188d6443a0bfb132dcec5e1';\n\nexport const GetMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return resp.data.results;\n};\n\nexport const GetMoviesById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const FindMovies = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data.results;\n};\n\nexport const GetMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const GetMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["CastDetailsBlock","styled","CastInfo","cast","map","el","src","profile_path","noImg","alt","name","character","cast_id","movieId","useParams","useState","moviesData","setMoviesData","isLoading","setIsLoading","useEffect","GetMovieCredits","data","console","log","Error","fetchMovieDetails","Loader","axios","API_KEY","GetMovies","resp","results","GetMoviesById","FindMovies","query","GetMovieReviews"],"sourceRoot":""}