{"version":3,"file":"static/js/620.478e1b96.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/ApiTMDB.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  gap: 5px;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: inline-block;\n  width: 100%;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: inline-block;\n  padding: 3px 16px;\n  color: black;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: #00008b;\n  }\n`;\n\nexport const FilmYear = styled.span`\n  color: #808080;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, MovieLink, FilmYear } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n              <FilmYear> ({Number.parseInt(movie.release_date)})</FilmYear>\n            </MovieLink>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Icon, Input } from './SearchBox.styled';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport const SearchBox = ({ onChange }) => {\n  const [movieValue, setMovieValue] = useState('');\n  const handleNameChange = event =>\n    setMovieValue(event.currentTarget.value.toLowerCase());\n  const handleSubmit = event => {\n    event.preventDefault();\n    onChange(movieValue);\n    setMovieValue('');\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <Wrapper>\n        <Icon />\n        <Input\n          type=\"text\"\n          value={movieValue}\n          onChange={handleNameChange}\n          placeholder=\"search movie by name...\"\n        />\n      </Wrapper>\n    </form>\n  );\n};\n\nSearchBox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FindMovies } from 'services/ApiTMDB';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchBox } from '../../components/SearchBox/SearchBox';\nimport { Loader } from 'components/Loader/Loader';\nimport { Spinner } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchName = searchParams.get('query') ?? '';\n\n  const handleSearch = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n        const data = await FindMovies(searchName);\n        setMovies(data);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovies(searchName);\n  }, [searchName]);\n\n  return (\n    <main>\n      <SearchBox value={searchName} onChange={handleSearch} />\n      {isLoading && (\n        <Spinner>\n          <Loader />\n        </Spinner>\n      )}\n      {movies !== null && <MovieList movies={movies} />}\n      {/* {movies === null ? (\n        <div>There is no data for view</div>\n      ) : (\n        <MovieList movies={movies} />\n      )} */}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '95775b42e188d6443a0bfb132dcec5e1';\n\nexport const GetMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return resp.data.results;\n};\n\nexport const GetMoviesById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const FindMovies = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data.results;\n};\n\nexport const GetMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const GetMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["List","styled","Item","MovieLink","NavLink","FilmYear","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","Number","parseInt","release_date","Wrapper","Input","Icon","HiSearch","SearchBox","onChange","useState","movieValue","setMovieValue","onSubmit","event","preventDefault","type","value","currentTarget","toLowerCase","placeholder","Spinner","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","searchName","get","useEffect","FindMovies","data","console","log","message","fetchMovies","query","Loader","axios","API_KEY","GetMovies","resp","results","GetMoviesById","movieId","GetMovieCredits","GetMovieReviews"],"sourceRoot":""}