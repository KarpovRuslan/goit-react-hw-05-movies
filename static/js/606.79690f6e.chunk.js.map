{"version":3,"file":"static/js/606.79690f6e.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.js","components/DataMovie/DataMovie.styled.js","components/DataMovie/DataMovie.jsx","pages/MovieDetails/MovieDetails.jsx","services/ApiTMDB.js"],"sourcesContent":["import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return <InfinitySpin width=\"200\" color=\"#3f51b5\" visible={true} />;\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: #00008b;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const MovieDetailsBlock = styled.div`\n  display: flex;\n  justify-content: start;\n`;\n\nexport const MovieDetailsInfo = styled.div`\n  margin-left: 15px;\n`;\n","import { MovieDetailsBlock, MovieDetailsInfo } from './DataMovie.styled';\nimport { Outlet, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst DataMovie = ({\n  title,\n  vote_average,\n  overview,\n  poster_path,\n  genres,\n  release_date,\n}) => {\n  return (\n    <>\n      <MovieDetailsBlock>\n        <img\n          src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n          alt={title}\n        />\n        <MovieDetailsInfo>\n          <h2>\n            {title}\n            <span> ({Number.parseInt(release_date)})</span>\n          </h2>\n          <p>User Score:{Math.round(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <div>{genres.map(genre => genre.name).join(', ')}</div>\n        </MovieDetailsInfo>\n      </MovieDetailsBlock>\n      <div>\n        <h3>Additional information</h3>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </div>\n      <Outlet />\n    </>\n  );\n};\nexport default DataMovie;\n\nDataMovie.propTypes = {\n  title: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n};\n","import { useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { BackLink } from '../../components/BackLink/BackLink';\nimport { GetMoviesById } from '../../services/ApiTMDB';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Spinner } from './MovieDetails.styled';\nimport DataMovie from 'components/DataMovie/DataMovie';\n\nconst MovieDetails = () => {\n  const [moviesData, setMoviesData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      setIsLoading(true);\n      try {\n        const data = await GetMoviesById(movieId);\n        setMoviesData(data);\n      } catch {\n        console.log(Error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      {isLoading && (\n        <Spinner>\n          <Loader />\n        </Spinner>\n      )}\n      {moviesData && (\n        <DataMovie\n          title={moviesData.title}\n          vote_average={moviesData.vote_average}\n          overview={moviesData.overview}\n          poster_path={moviesData.poster_path}\n          genres={moviesData.genres}\n          release_date={moviesData.release_date}\n        />\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '95775b42e188d6443a0bfb132dcec5e1';\n\nexport const GetMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return resp.data.results;\n};\n\nexport const GetMoviesById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const FindMovies = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data.results;\n};\n\nexport const GetMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const GetMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["Loader","width","color","visible","StyledLink","styled","Link","BackLink","to","children","size","Spinner","MovieDetailsBlock","MovieDetailsInfo","title","vote_average","overview","poster_path","genres","release_date","src","alt","Number","parseInt","Math","round","map","genre","name","join","useState","moviesData","setMoviesData","isLoading","setIsLoading","backLinkHref","useLocation","state","from","movieId","useParams","useEffect","GetMoviesById","data","console","log","Error","fetchMovieDetails","axios","API_KEY","GetMovies","resp","results","FindMovies","query","GetMovieCredits"],"sourceRoot":""}